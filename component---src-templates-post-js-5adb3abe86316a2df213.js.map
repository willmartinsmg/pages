{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/siteConfig.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/Layout.js","webpack:///./src/components/common/PostCard.js","webpack:///./src/components/common/Pagination.js","webpack:///./src/components/common/Navigation.js","webpack:///./src/components/common/index.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMeta.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/AuthorMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Post","props","_this","_React$Component","call","this","state","commentsEnabled","showComments","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1___default","setState","_","render","_this$props","data","location","post","markdownRemark","disqusShortname","config","disqusConfig","identifier","frontmatter","id","title","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","_components_common_meta__WEBPACK_IMPORTED_MODULE_8__","type","_components_common__WEBPACK_IMPORTED_MODULE_7__","className","dateTime","published_at","tags","map","_ref","key","name","gatsby__WEBPACK_IMPORTED_MODULE_6__","to","slug","feature_image","childImageSharp","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","fluid","dangerouslySetInnerHTML","__html","html","comment","onClick","disqus_react__WEBPACK_IMPORTED_MODULE_9__","shortname","React","Component","propTypes","PropTypes","shape","excerpt","string","isRequired","object","postQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","func","module","exports","siteUrl","postsPerPage","siteTitleMeta","siteDescriptionMeta","siteTwitterHandle","siteFacebookHandle","language","shareImageWidth","shareImageHeight","shortTitle","siteIcon","backgroundColor","themeColor","cover_image","logo","navigation","label","url","googleAnalyticsId","m","require","default","DefaultLayout","bodyClass","isHome","site","twitterUrl","replace","facebookUrl","react_default","Helmet_default","lang","gatsby_browser_entry","src","alt","gatsby_image_default","fixed","file","common_Navigation","navClass","href","target","rel","node","bool","DefaultLayoutSettingsQuery","Layout_DefaultLayout","Object","assign","_3380264785","PostCard","readingTime","readingTimeHelper","featured","author","profile_image","Pagination","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","role","Navigation","navItem","i","match","defaultProps","arrayOf","Layout","common_PostCard","common_Pagination","getAuthorProperties","primaryAuthor","authorProfiles","push","website","twitter","facebook","compact","sameAsArray","length","join","image","fetchAuthorData","ImageMeta","content","property","ArticleMetaGhost","settings","canonical","ghostPost","publicTags","tagsHelper","visibility","fn","tag","primaryTag","shareImage","get","publisherLogo","resolve","articleId","meta_title","meta_description","og_title","og_description","updated_at","keyword","twitter_title","twitter_description","meta_ImageMeta","allGhostSettings","WebsiteMeta","description","bio","oneOf","AuthorMeta","MetaData","pathname","ghostPage","ArticleMeta","meta_WebsiteMeta","allMarkdownRemark","meta_AuthorMeta","ghostTag","ghostAuthor","meta_MetaData","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json"],"mappings":"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","file":"component---src-templates-post-js-5adb3abe86316a2df213.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { Link } from 'gatsby'\nimport { Layout } from '../components/common'\nimport { MetaData } from '../components/common/meta'\nimport { DiscussionEmbed } from \"disqus-react\"\nimport config from \"../utils/siteConfig\"\n/**\n* Single post view (/:slug)\n*\n* This file renders a single post and loads all the content.\n*\n*/\nclass Post extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = { commentsEnabled: false }\n        this.showComments = this.showComments.bind(this)\n    }\n\n    showComments() {\n        this.setState(_ => {\n            return {\n                commentsEnabled: true,\n            }\n        })\n    }\n    render(){\n        const { data, location } = this.props\n        const post = data.markdownRemark\n        const disqusShortname = config.disqusShortname\n        const disqusConfig = {\n            identifier: post.frontmatter.id,\n            title: post.frontmatter.title,\n        }\n\n        return (\n            <>\n                <MetaData data={data} location={location} id={post.frontmatter.id} type=\"article\" />\n                <Layout>\n                    <div className=\"container\">\n                        <article className=\"content\">\n                            <header className=\"post-full-header\">\n                                <div className=\"post-full-meta\">\n                                    <time\n                                        className=\"post-full-meta-date\"\n                                        dateTime=\"{post.frontmatter.published_at}\"\n                                    >\n                                        {post.frontmatter.published_at}\n                                    </time>\n\n                                    {post.frontmatter.tags.map(({ frontmatter }) => (\n                                        <span key={frontmatter.name}>\n                                            <span className=\"date-divider\">/</span>\n                                            <Link to={`tag/${frontmatter.slug}`}>{frontmatter.name}</Link>\n                                        </span>\n                                    ))}\n                                </div>\n                                <h1 className=\"post-full-title\">\n                                    {post.frontmatter.title}\n                                </h1>\n                            </header>\n                            {post.frontmatter.feature_image ? (\n                                <figure className=\"post-feature-image\">\n                                    {post.frontmatter.feature_image && post.frontmatter.feature_image.childImageSharp &&\n                                    <Img fluid={post.frontmatter.feature_image.childImageSharp.fluid}/>\n                                    }\n                                    {/* <img\n                                    src={post.frontmatter.feature_image}\n                                    alt={post.frontmatter.title}\n                                /> */}\n                                </figure>\n                            ) : null}\n                            <section className=\"post-full-content\">\n                                {/* <h1 className=\"content-title\">\n                                {post.frontmatter.title}\n                            </h1> */}\n\n                                {/* The main post content */}\n                                <section\n                                    className=\"content-body load-external-scripts\"\n                                    dangerouslySetInnerHTML={{\n                                        __html: post.html,\n                                    }}\n                                />\n                            </section>\n                        </article>\n                        {post.frontmatter.comment && !this.state.commentsEnabled && disqusShortname && <div className=\"show-comment-button\" onClick={this.showComments}>Show Comments</div> }\n                        {post.frontmatter.comment && this.state.commentsEnabled && disqusShortname && <DiscussionEmbed shortname={disqusShortname} config={disqusConfig} />}\n                    </div>\n                </Layout>\n            </>\n        )\n    }\n}\n// const Post = ({ data, location, pageContext }) => {\n//     // console.log(`POST -> `, data, pageContext)\n//\n//\n// };\n\nPost.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            excerpt: PropTypes.string.isRequired,\n        }).isRequired,\n    }).isRequired,\n    location: PropTypes.object.isRequired,\n}\n\nexport default Post\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        feature_image {\n            childImageSharp {\n              fluid(maxWidth: 1000, maxHeight: 500) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        author {\n            frontmatter {\n                name\n                profile_image\n                twitter\n                facebook\n                website\n            }\n        }\n        tags {\n            frontmatter {\n                name\n                slug\n            }\n        }\n        meta_description\n        published_at(formatString: \"MMMM DD, YYYY\")\n        comment,\n        id\n      }\n      excerpt\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = {\n    siteUrl: `https://willmartinsmg.github.io/`, // Site domain. Do not include a trailing slash!\n\n    postsPerPage: 12, // Number of posts shown on paginated pages (changes this requires sometimes to delete the cache)\n\n    siteTitleMeta: `William Martins`, // This allows an alternative site title for meta data for pages.\n    siteDescriptionMeta: `Meu blog pessoal`, // This allows an alternative site description for meta data for pages.\n    siteTwitterHandle: `@willmartinsmg`,\n    siteFacebookHandle: `william.martins86`,\n    language: `en`,\n\n    shareImageWidth: 1000, // Change to the width of your default share image\n    shareImageHeight: 523, // Change to the height of your default share image\n\n    shortTitle: `Blog Pessoal`, // Used for App manifest e.g. Mobile Home Screen\n    siteIcon: `favicon.png`, // Logo in /static dir used for SEO, RSS, and App manifest\n    backgroundColor: `#e9e9e9`, // Used for Offline Manifest\n    themeColor: `#15171A`, // Used for Offline Manifest\n    cover_image: ``,\n\n    logo: `/images/logo.png`,\n\n    navigation: [\n        {\n            label: `Home`,\n            url: `/`,\n        },\n        {\n            label: `Sobre mim`,\n            url: `/about`,\n        },\n    ],\n\n    googleAnalyticsId: \"UA-180775069-1\", // ADD_COMPLETE_TRACKING_ID => UA-151385213-1\n\n    disqusShortname: \"willmartinsmg\" // ADD_SHORT_NAME => https://help.disqus.com/en/articles/1717111-what-s-a-shortname\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { Navigation } from '.'\nimport config from '../../utils/siteConfig'\n\n// Styles\nimport '../../styles/app.css'\n\n/**\n* Main layout component\n*\n* The Layout component wraps around each page and template.\n* It also provides the header, footer as well as the main\n* styles, and meta data for each page.\n*\n*/\nconst DefaultLayout = ({ data, children, bodyClass, isHome }) => {\n    const site = config\n    const twitterUrl = config.siteTwitterHandle ? `https://twitter.com/${config.siteTwitterHandle.replace(/^@/, ``)}` : null\n    const facebookUrl = config.siteFacebookHandle ? `https://www.facebook.com/${config.siteFacebookHandle.replace(/^\\//, ``)}` : null\n\n    return (\n    <>\n        <Helmet>\n            <html lang={config.language} />\n            <body className={bodyClass} />\n        </Helmet>\n\n        <div className=\"viewport\">\n\n            <div className=\"viewport-top\">\n                {/* The main header section on top of the screen */}\n                <header className=\"site-head\">\n                    <div className=\"container\">\n                        <div className=\"site-mast\">\n                            <div className={isHome ? `site-mast-left` : `site-mast-left-flex`}>\n                                <Link to=\"/\">\n                                    {config.logo ?\n                                        <img className=\"site-logo\" src={config.logo} alt={config.siteTitleMeta} />\n                                        : <Img fixed={data.file.childImageSharp.fixed} alt={site.title} />\n                                    }\n                                </Link>\n                                {isHome ? null :\n                                    <nav className=\"site-nav\">\n                                        <div className=\"site-nav-left\">\n                                            <Navigation data={config.navigation} navClass=\"site-nav-item\" />\n                                        </div>\n                                    </nav>}\n                            </div>\n                            <div className=\"site-mast-right\">\n                                { config.siteTwitterHandle && <a href={ twitterUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/twitter.svg\" alt=\"Twitter\" /></a>}\n                                { config.siteFacebookHandle && <a href={ facebookUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/facebook.svg\" alt=\"Facebook\" /></a>}\n                                <a className=\"site-nav-item\" href={ `https://feedly.com/i/subscription/feed/${config.siteUrl}/rss/` } target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/rss.svg\" alt=\"RSS Feed\" /></a>\n                            </div>\n                        </div>\n                        { isHome ?\n                            <div className=\"site-banner\">\n                                <h1 className=\"site-banner-title\">{config.siteTitleMeta}</h1>\n                                <p className=\"site-banner-desc\">{config.siteDescriptionMeta}</p>\n                            </div> :\n                            null}\n                        {isHome ?\n                            <nav className=\"site-nav\">\n                                <div className=\"site-nav-left\">\n                                    {/* The navigation items as setup in Ghost */}\n                                    <Navigation data={config.navigation} navClass=\"site-nav-item\" />\n                                </div>\n                                <div className=\"site-nav-right\">\n                                    {/* <Link className=\"site-nav-button\" to=\"/about\">About</Link> */}\n                                </div>\n                            </nav> : null}\n                    </div>\n                </header>\n\n                <main className=\"site-main\">\n                    {/* All the main content gets inserted here, index.js, post.js */}\n                    {children}\n                </main>\n\n            </div>\n\n            <div className=\"viewport-bottom\">\n                {/* The footer at the very bottom of the screen */}\n                <footer className=\"site-foot\">\n                    <div className=\"site-foot-nav container\">\n                        <div className=\"site-foot-nav-left\">\n                            <Link to=\"/\">{config.siteTitleMeta}</Link>\n                        </div>\n                        <div className=\"site-foot-nav-right\">\n                            <Navigation data={config.navigation} navClass=\"site-foot-nav-item\" />\n                        </div>\n                    </div>\n                </footer>\n\n            </div>\n        </div>\n\n    </>\n    )\n}\n\nDefaultLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n    bodyClass: PropTypes.string,\n    isHome: PropTypes.bool\n}\n\nconst DefaultLayoutSettingsQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettings {\n                file(relativePath: {eq: \"ghost-icon.png\"}) {\n                    childImageSharp {\n                        fixed(width: 30, height: 30) {\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <DefaultLayout data={data} {...props} />}\n    />\n)\n\nexport default DefaultLayoutSettingsQuery\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { readingTime as readingTimeHelper } from '@tryghost/helpers'\n\nconst PostCard = ({ post }) => {\n    // console.log(\"Postcard\", post)\n    const url = `/${post.frontmatter.slug}/`\n    const readingTime = readingTimeHelper(post)\n    \n    return (\n        <Link to={url} className=\"post-card\">\n            <header className=\"post-card-header\">\n                {post.frontmatter.feature_image &&\n                    post.frontmatter.feature_image.childImageSharp && (\n                    <Img\n                        fluid={\n                            post.frontmatter.feature_image\n                                .childImageSharp.fluid\n                        }\n                        alt={post.frontmatter.title}\n                    />\n                )}\n                {/* {post.frontmatter.feature_image &&\n                    <div className=\"post-card-image\" style={{\n                        backgroundImage: `url(${post.frontmatter.feature_image})` ,\n                    }}></div>} */}\n            </header>\n            <div className=\"post-card-content\">\n                {post.frontmatter.tags && (\n                    <span className=\"post-card-tags\">\n                        {post.frontmatter.tags[0].frontmatter.name}\n                    </span>\n                )}\n                {post.frontmatter.featured && <span>Featured</span>}\n                <h2 className=\"post-card-title\">\n                    {post.frontmatter.title}\n                </h2>\n                <section className=\"post-card-excerpt\">\n                    {post.excerpt}\n                </section>\n                <footer className=\"post-card-footer\">\n                    <div className=\"post-card-footer-left\">\n                        <div className=\"post-card-avatar\">\n                            {post.frontmatter.author ? (\n                                <img\n                                    className=\"author-profile-image\"\n                                    src={\n                                        post.frontmatter.author.frontmatter\n                                            .profile_image\n                                    }\n                                    alt={\n                                        post.frontmatter.author.frontmatter\n                                            .name\n                                    }\n                                />\n                            ) : (\n                                <img\n                                    className=\"default-avatar\"\n                                    src=\"/images/icons/avatar.svg\"\n                                    alt={\n                                        post.frontmatter.author.frontmatter\n                                            .name\n                                    }\n                                />\n                            )}\n                        </div>\n                        <span className=\"post-card-author-name\">\n                            {post.frontmatter.author.frontmatter.name}\n                        </span>\n                    </div>\n                    <div className=\"post-card-footer-right\">\n                        <div className=\"post-reading-time\">\n                            {readingTime}\n                        </div>\n                    </div>\n                </footer>\n            </div>\n        </Link>\n    )\n}\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        frontmatter: PropTypes.object.isRequired,\n    }).isRequired,\n}\n\nexport default PostCard","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nconst Pagination = ({ pageContext }) => {\n    const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext\n\n    return (\n        <nav className=\"pagination\" role=\"navigation\">\n            <div>\n                {previousPagePath && (\n\n                    <Link to={previousPagePath} rel=\"prev\">\n                            Previous\n                    </Link>\n\n                )}\n            </div>\n            {numberOfPages > 1 && <div className=\"pagination-location\">Page {humanPageNumber} of {numberOfPages}</div>}\n            <div>\n                {nextPagePath && (\n\n                    <Link to={nextPagePath} rel=\"next\">\n                            Next\n                    </Link>\n                )}\n            </div>\n        </nav>\n    )\n}\n\nPagination.propTypes = {\n    pageContext: PropTypes.object.isRequired,\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\n/**\n* Navigation component\n*\n* The Navigation component takes an array of your Ghost\n* navigation property that is fetched from the settings.\n* It differentiates between absolute (external) and relative link (internal).\n* You can pass it a custom class for your own styles, but it will always fallback\n* to a `site-nav-item` class.\n*\n*/\nconst Navigation = ({ data, navClass }) => (\n    <>\n        {data.map((navItem, i) => {\n            if (navItem.url.match(/^\\s?http(s?)/gi)) {\n                return <a className={navClass} href={navItem.url} key={i} target=\"_blank\" rel=\"noopener noreferrer\">{navItem.label}</a>\n            } else {\n                return <Link className={navClass} to={navItem.url} key={i}>{navItem.label}</Link>\n            }\n        })}\n    </>\n)\n\nNavigation.defaultProps = {\n    navClass: `site-nav-item`,\n}\n\nNavigation.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    navClass: PropTypes.string,\n}\n\nexport default Navigation\n","export { default as Layout } from './Layout'\nexport { default as PostCard } from './PostCard'\nexport { default as Pagination } from './Pagination'\nexport { default as Navigation } from './Navigation'\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor) => {\n    let authorProfiles = []\n\n    authorProfiles.push(\n        primaryAuthor.website ? primaryAuthor.website : null,\n        primaryAuthor.twitter ? `https://twitter.com/${primaryAuthor.twitter.replace(/^@/, ``)}/` : null,\n        primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null\n    )\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: primaryAuthor.name || null,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: primaryAuthor.profile_image || null,\n        facebookUrl: primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport config from '../../../utils/siteConfig'\n\nconst ImageMeta = ({ image }) => {\n    if (!image) {\n        return null\n    }\n\n    return (\n        <Helmet>\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            <meta name=\"twitter:image\" content={image} />\n            <meta property=\"og:image\" content={image} />\n            <meta property=\"og:image:width\" content={config.shareImageWidth} />\n            <meta property=\"og:image:height\" content={config.shareImageHeight} />\n        </Helmet >\n    )\n}\n\nImageMeta.propTypes = {\n    image: PropTypes.string,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport url from 'url'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\nimport config from '../../../utils/siteConfig'\n\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nconst ArticleMetaGhost = ({ data, settings, canonical, id }) => {\n    const ghostPost = data\n    settings = config\n\n    const author = getAuthorProperties(ghostPost.frontmatter.author.frontmatter)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || ``\n    const shareImage = ghostPost.frontmatter.feature_image\n        ? ghostPost.frontmatter.feature_image.childImageSharp.fluid.src\n        : _.get(config, `cover_image`, null);\n    const publisherLogo = config.siteIcon ? url.resolve(config.siteUrl, config.siteIcon) : null\n    const articleId = id;\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.frontmatter.meta_title || ghostPost.frontmatter.title}</title>\n                <meta name=\"description\" content={ghostPost.frontmatter.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={config.title} />\n                <meta property=\"og:type\" content=\"article\" />\n                <meta property=\"og:title\"\n                    content={\n                        ghostPost.frontmatter.og_title ||\n                        ghostPost.frontmatter.meta_title ||\n                        ghostPost.frontmatter.title\n                    }\n                />\n                <meta property=\"og:description\"\n                    content={\n                        ghostPost.frontmatter.og_description ||\n                        ghostPost.frontmatter.meta_description ||\n                        ghostPost.frontmatter.excerpt\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.frontmatter.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.frontmatter.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                {author.facebookUrl && <meta property=\"article:author\" content={author.facebookUrl} />}\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                {primaryTag && <meta name=\"twitter:label2\" content=\"Filed under\" />}\n                {primaryTag && <meta name=\"twitter:data2\" content={primaryTag} />}\n\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.frontmatter.meta_title || ghostPost.frontmatter.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.frontmatter.published_at}\",\n                        \"dateModified\": \"${ghostPost.frontmatter.updated_at}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"publisher\": {\n                            \"@type\": \"Organization\",\n                            \"name\": \"${settings.title}\",\n                            \"logo\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${publisherLogo}\",\n                                \"width\": 60,\n                                \"height\": 60\n                            }\n                        },\n                        \"description\": \"${ghostPost.frontmatter.meta_description || ghostPost.frontmatter.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        }\n                    }\n                `}</script>\n                <script type=\"application/javascript\">\n                    {`console.log(\"Called\"); window.pageId=\"${articleId}\"`}\n                </script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        html: PropTypes.string.isRequired,\n        frontmatter: PropTypes.object.isRequired,\n        excerpt: PropTypes.string.isRequired,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\n// const ArticleMetaQuery = props => (\n//     <StaticQuery\n//         query={graphql`\n//             query {\n//                 allGhostSettings {\n//                     edges {\n//                         node {\n//                             ...GhostSettingsFields\n//                         }\n//                     }\n//                 }\n//             }\n//         `}\n//         render={data => <ArticleMetaGhost settings={data} {...props} />}\n//     />\n// )\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { StaticQuery, graphql } from 'gatsby'\nimport url from 'url'\n\nimport ImageMeta from './ImageMeta'\nimport config from '../../../utils/siteConfig'\n\nconst WebsiteMeta = ({ data, canonical, name, description, image, type }) => {\n    // (`WebsiteMeta ->`, data, name, description, image)\n\n    const publisherLogo = url.resolve(config.siteUrl, config.siteIcon)\n    let shareImage = image || _.get(config, `cover_image`, null)\n\n    shareImage = shareImage ? url.resolve(config.siteUrl, shareImage) : null\n\n    description = description || data.meta_description || data.description || config.siteDescriptionMeta || config.siteDescriptionMeta\n    const title = `${name} - ${config.siteTitleMeta}`\n\n    return (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta\n                    property=\"og:site_name\"\n                    content={config.siteTitleMeta}\n                />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n\n                {config.siteTwitterHandle && (\n                    <meta\n                        name=\"twitter:site\"\n                        content={`https://twitter.com/${config.siteTwitterHandle.replace(\n                            /^@/,\n                            ``\n                        )}/`}\n                    />\n                )}\n                {config.siteTwitterHandle && (\n                    <meta\n                        name=\"twitter:creator\"\n                        content={config.siteTwitterHandle}\n                    />\n                )}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"${type}\",\n                        \"url\": \"${canonical}\",\n                        ${\n                            shareImage\n                                ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },`\n                                : ``\n                        }\n                        \"publisher\": {\n                            \"@type\": \"Organization\",\n                            \"name\": \"${config.siteTitleMeta}\",\n                            \"logo\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${publisherLogo}\",\n                                \"width\": 60,\n                                \"height\": 60\n                            }\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n                <script>\n                    {`\n                       if (window.netlifyIdentity) {\n                        window.netlifyIdentity.on(\"init\", user => {\n                          if (!user) {\n                            window.netlifyIdentity.on(\"login\", () => {\n                              document.location.href = \"/admin/\";\n                            });\n                          }\n                        });\n                      }\n                    \n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        feature_image: PropTypes.string,\n        description: PropTypes.string,\n        bio: PropTypes.string,\n        profile_image: PropTypes.string,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    type: PropTypes.oneOf([`website`, `tag`]).isRequired,\n}\n\n// const WebsiteMetaQuery = props => (\n//     <StaticQuery\n//         query={graphql`\n//             query GhostSettingsWebsiteMeta {\n//                 allGhostSettings {\n//                     edges {\n//                         node {\n//                             ...GhostSettingsFields\n//                         }\n//                     }\n//                 }\n//             }\n//         `}\n//         render={data => <WebsiteMeta settings={data} {...props} />}\n//     />\n// )\n\nexport default WebsiteMeta\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport ImageMeta from './ImageMeta'\nimport getAuthorProperties from './getAuthorProperties'\nimport config from '../../../utils/siteConfig'\n\nconst AuthorMeta = ({ data, settings, canonical }) => {\n    // console.log(`AuthorMeta->`, data)\n    // settings = settings.allGhostSettings.edges[0].node\n\n    const author = getAuthorProperties(data)\n    const shareImage = author.image || _.get(config, `cover_image`, null)\n    const title = `${data.name} - ${config.siteTitleMeta}`\n    const description = data.description || config.siteDescriptionMeta\n\n    return (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={config.siteTitleMeta} />\n                <meta property=\"og:type\" content=\"profile\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                {config.siteTwitterHandle && <meta name=\"twitter:site\" content={`https://twitter.com/${config.siteTwitterHandle.replace(/^@/, ``)}/`} />}\n                {config.siteTwitterHandle && <meta name=\"twitter:creator\" content={config.siteTwitterHandle} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Person\",\n                        \"name\": \"${data.name}\",\n                        ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray},` : ``}\n                        \"url\": \"${canonical}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nAuthorMeta.propTypes = {\n    data: PropTypes.shape({\n        name: PropTypes.string,\n        bio: PropTypes.string,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\n// const AuthorMetaQuery = props => (\n//     <StaticQuery\n//         query={graphql`\n//             query GhostSettingsAuthorMeta {\n//                 allGhostSettings {\n//                     edges {\n//                         node {\n//                             ...GhostSettingsFields\n//                         }\n//                     }\n//                 }\n//             }\n//         `}\n//         render={data => <AuthorMeta settings={data} {...props} />}\n//     />\n// )\n\nexport default AuthorMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport url from 'url'\n\nimport config from '../../../utils/siteConfig'\nimport ArticleMeta from './ArticleMeta'\nimport WebsiteMeta from './WebsiteMeta'\nimport AuthorMeta from './AuthorMeta'\n\n/**\n* MetaData will generate all relevant meta data information incl.\n* JSON-LD (schema.org), Open Graph (Facebook) and Twitter properties.\n*\n*/\nconst MetaData = ({\n    data,\n    name,\n    description,\n    image,\n    location,\n    type,\n    id\n}) => {\n    // console.log(`metaData->`, data, type)\n    const canonical = url.resolve(config.siteUrl, location.pathname, `/`)\n    const { ghostPage } = data\n    // settings = settings.allGhostSettings.edges[0].node\n\n    if (type === `article`) {\n        return (\n            <ArticleMeta\n                data={data.markdownRemark}\n                canonical={canonical}\n                id={id}\n            />\n        )\n    } else if (type === `tag`) {\n        return (\n            <WebsiteMeta\n                data={data.allMarkdownRemark}\n                canonical={canonical}\n                name={name}\n                description={description}\n                image={image}\n                type=\"tag\"\n            />\n        )\n    } else if (type === `author`) {\n        return (\n            <AuthorMeta\n                data={data}\n                canonical={canonical}\n                description={description}\n                image={image}\n                type=\"author\"\n            />\n        )\n    } else if (type === `page`) {\n        return (\n            <WebsiteMeta\n                data={ghostPage}\n                canonical={canonical}\n                type=\"website\"\n            />\n        )\n    } else {\n        name = name || config.siteTitleMeta\n        description = description || config.siteDescriptionMeta\n        image = image || config.cover_image || null\n\n        image = image ? url.resolve(config.siteUrl, image) : null\n\n        return (\n            <WebsiteMeta\n                data={{}}\n                canonical={canonical}\n                name={name}\n                description={description}\n                image={image}\n                type=\"website\"\n            />\n        )\n    }\n}\n\nMetaData.defaultProps = {\n    data: {},\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.object,\n        ghostTag: PropTypes.object,\n        ghostAuthor: PropTypes.object,\n        ghostPage: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n}\n\n// const MetaDataQuery = props => (\n//     <StaticQuery\n//         query={graphql`\n//             query GhostSettingsMetaData {\n//                 allGhostSettings {\n//                     edges {\n//                         node {\n//                             title\n//                             description\n//                         }\n//                     }\n//                 }\n//             }\n//         `}\n//         render={data => <MetaData settings={data} {...props} />}\n//     />\n// )\n\nexport default MetaData\n","export { default as MetaData } from './MetaData'\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}