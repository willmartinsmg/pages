{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/siteConfig.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/common/Layout.js","webpack:///./src/components/common/PostCard.js","webpack:///./src/components/common/Pagination.js","webpack:///./src/components/common/Navigation.js","webpack:///./src/components/common/index.js","webpack:///./src/components/common/meta/getAuthorProperties.js","webpack:///./src/components/common/meta/ImageMeta.js","webpack:///./src/components/common/meta/ArticleMeta.js","webpack:///./src/components/common/meta/WebsiteMeta.js","webpack:///./src/components/common/meta/AuthorMeta.js","webpack:///./src/components/common/meta/MetaData.js","webpack:///./src/components/common/meta/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","module","exports","siteUrl","postsPerPage","siteTitleMeta","siteDescriptionMeta","siteTwitterHandle","siteFacebookHandle","language","shareImageWidth","shareImageHeight","shortTitle","siteIcon","backgroundColor","themeColor","cover_image","logo","navigation","label","url","googleAnalyticsId","disqusShortname","m","require","default","DefaultLayout","_ref","bodyClass","isHome","site","config","twitterUrl","replace","facebookUrl","react_default","Fragment","Helmet_default","lang","className","gatsby_browser_entry","to","src","alt","gatsby_image_default","fixed","file","childImageSharp","title","common_Navigation","navClass","href","target","rel","node","bool","DefaultLayoutSettingsQuery","Layout_DefaultLayout","Object","assign","_3380264785","PostCard","post","frontmatter","slug","readingTime","readingTimeHelper","feature_image","fluid","tags","name","featured","excerpt","author","profile_image","shape","Pagination","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","role","Navigation","map","navItem","i","match","key","defaultProps","arrayOf","Layout","common_PostCard","common_Pagination","getAuthorProperties","primaryAuthor","authorProfiles","push","website","twitter","facebook","_","compact","sameAsArray","length","join","image","fetchAuthorData","ImageMeta","content","property","ArticleMetaGhost","settings","canonical","id","ghostPost","publicTags","tagsHelper","visibility","fn","tag","primaryTag","shareImage","get","publisherLogo","resolve","articleId","meta_title","meta_description","og_title","og_description","published_at","updated_at","keyword","twitter_title","twitter_description","type","meta_ImageMeta","html","allGhostSettings","WebsiteMeta","description","bio","oneOf","AuthorMeta","MetaData","location","pathname","ghostPage","ArticleMeta","markdownRemark","meta_WebsiteMeta","allMarkdownRemark","meta_AuthorMeta","ghostTag","ghostAuthor","meta_MetaData","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json"],"mappings":"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","file":"3-92ed3cdda93f65c3cc30.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","module.exports = {\n    siteUrl: `https://willmartinsmg.github.io/`, // Site domain. Do not include a trailing slash!\n\n    postsPerPage: 12, // Number of posts shown on paginated pages (changes this requires sometimes to delete the cache)\n\n    siteTitleMeta: `William Martins`, // This allows an alternative site title for meta data for pages.\n    siteDescriptionMeta: `Meu blog pessoal`, // This allows an alternative site description for meta data for pages.\n    siteTwitterHandle: `@willmartinsmg`,\n    siteFacebookHandle: `william.martins86`,\n    language: `en`,\n\n    shareImageWidth: 1000, // Change to the width of your default share image\n    shareImageHeight: 523, // Change to the height of your default share image\n\n    shortTitle: `Blog Pessoal`, // Used for App manifest e.g. Mobile Home Screen\n    siteIcon: `favicon.png`, // Logo in /static dir used for SEO, RSS, and App manifest\n    backgroundColor: `#e9e9e9`, // Used for Offline Manifest\n    themeColor: `#15171A`, // Used for Offline Manifest\n    cover_image: ``,\n\n    logo: `/images/logo.png`,\n\n    navigation: [\n        {\n            label: `Home`,\n            url: `/`,\n        },\n        {\n            label: `Sobre mim`,\n            url: `/about`,\n        },\n    ],\n\n    googleAnalyticsId: \"UA-180775069-1\", // ADD_COMPLETE_TRACKING_ID => UA-151385213-1\n\n    disqusShortname: \"willmartinsmg\" // ADD_SHORT_NAME => https://help.disqus.com/en/articles/1717111-what-s-a-shortname\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { Navigation } from '.'\nimport config from '../../utils/siteConfig'\n\n// Styles\nimport '../../styles/app.css'\n\n/**\n* Main layout component\n*\n* The Layout component wraps around each page and template.\n* It also provides the header, footer as well as the main\n* styles, and meta data for each page.\n*\n*/\nconst DefaultLayout = ({ data, children, bodyClass, isHome }) => {\n    const site = config\n    const twitterUrl = config.siteTwitterHandle ? `https://twitter.com/${config.siteTwitterHandle.replace(/^@/, ``)}` : null\n    const facebookUrl = config.siteFacebookHandle ? `https://www.facebook.com/${config.siteFacebookHandle.replace(/^\\//, ``)}` : null\n\n    return (\n    <>\n        <Helmet>\n            <html lang={config.language} />\n            <body className={bodyClass} />\n        </Helmet>\n\n        <div className=\"viewport\">\n\n            <div className=\"viewport-top\">\n                {/* The main header section on top of the screen */}\n                <header className=\"site-head\">\n                    <div className=\"container\">\n                        <div className=\"site-mast\">\n                            <div className={isHome ? `site-mast-left` : `site-mast-left-flex`}>\n                                <Link to=\"/\">\n                                    {config.logo ?\n                                        <img className=\"site-logo\" src={config.logo} alt={config.siteTitleMeta} />\n                                        : <Img fixed={data.file.childImageSharp.fixed} alt={site.title} />\n                                    }\n                                </Link>\n                                {isHome ? null :\n                                    <nav className=\"site-nav\">\n                                        <div className=\"site-nav-left\">\n                                            <Navigation data={config.navigation} navClass=\"site-nav-item\" />\n                                        </div>\n                                    </nav>}\n                            </div>\n                            <div className=\"site-mast-right\">\n                                { config.siteTwitterHandle && <a href={ twitterUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/twitter.svg\" alt=\"Twitter\" /></a>}\n                                { config.siteFacebookHandle && <a href={ facebookUrl } className=\"site-nav-item\" target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/facebook.svg\" alt=\"Facebook\" /></a>}\n                                <a className=\"site-nav-item\" href={ `https://feedly.com/i/subscription/feed/${config.siteUrl}/rss/` } target=\"_blank\" rel=\"noopener noreferrer\"><img className=\"site-nav-icon\" src=\"/images/icons/rss.svg\" alt=\"RSS Feed\" /></a>\n                            </div>\n                        </div>\n                        { isHome ?\n                            <div className=\"site-banner\">\n                                <h1 className=\"site-banner-title\">{config.siteTitleMeta}</h1>\n                                <p className=\"site-banner-desc\">{config.siteDescriptionMeta}</p>\n                            </div> :\n                            null}\n                        {isHome ?\n                            <nav className=\"site-nav\">\n                                <div className=\"site-nav-left\">\n                                    {/* The navigation items as setup in Ghost */}\n                                    <Navigation data={config.navigation} navClass=\"site-nav-item\" />\n                                </div>\n                                <div className=\"site-nav-right\">\n                                    {/* <Link className=\"site-nav-button\" to=\"/about\">About</Link> */}\n                                </div>\n                            </nav> : null}\n                    </div>\n                </header>\n\n                <main className=\"site-main\">\n                    {/* All the main content gets inserted here, index.js, post.js */}\n                    {children}\n                </main>\n\n            </div>\n\n            <div className=\"viewport-bottom\">\n                {/* The footer at the very bottom of the screen */}\n                <footer className=\"site-foot\">\n                    <div className=\"site-foot-nav container\">\n                        <div className=\"site-foot-nav-left\">\n                            <Link to=\"/\">{config.siteTitleMeta}</Link>\n                        </div>\n                        <div className=\"site-foot-nav-right\">\n                            <Navigation data={config.navigation} navClass=\"site-foot-nav-item\" />\n                        </div>\n                    </div>\n                </footer>\n\n            </div>\n        </div>\n\n    </>\n    )\n}\n\nDefaultLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n    bodyClass: PropTypes.string,\n    isHome: PropTypes.bool\n}\n\nconst DefaultLayoutSettingsQuery = props => (\n    <StaticQuery\n        query={graphql`\n            query GhostSettings {\n                file(relativePath: {eq: \"ghost-icon.png\"}) {\n                    childImageSharp {\n                        fixed(width: 30, height: 30) {\n                            ...GatsbyImageSharpFixed\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => <DefaultLayout data={data} {...props} />}\n    />\n)\n\nexport default DefaultLayoutSettingsQuery\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { readingTime as readingTimeHelper } from '@tryghost/helpers'\n\nconst PostCard = ({ post }) => {\n    // console.log(\"Postcard\", post)\n    const url = `/${post.frontmatter.slug}/`\n    const readingTime = readingTimeHelper(post)\n    \n    return (\n        <Link to={url} className=\"post-card\">\n            <header className=\"post-card-header\">\n                {post.frontmatter.feature_image &&\n                    post.frontmatter.feature_image.childImageSharp && (\n                    <Img\n                        fluid={\n                            post.frontmatter.feature_image\n                                .childImageSharp.fluid\n                        }\n                        alt={post.frontmatter.title}\n                    />\n                )}\n                {/* {post.frontmatter.feature_image &&\n                    <div className=\"post-card-image\" style={{\n                        backgroundImage: `url(${post.frontmatter.feature_image})` ,\n                    }}></div>} */}\n            </header>\n            <div className=\"post-card-content\">\n                {post.frontmatter.tags && (\n                    <span className=\"post-card-tags\">\n                        {post.frontmatter.tags[0].frontmatter.name}\n                    </span>\n                )}\n                {post.frontmatter.featured && <span>Featured</span>}\n                <h2 className=\"post-card-title\">\n                    {post.frontmatter.title}\n                </h2>\n                <section className=\"post-card-excerpt\">\n                    {post.excerpt}\n                </section>\n                <footer className=\"post-card-footer\">\n                    <div className=\"post-card-footer-left\">\n                        <div className=\"post-card-avatar\">\n                            {post.frontmatter.author ? (\n                                <img\n                                    className=\"author-profile-image\"\n                                    src={\n                                        post.frontmatter.author.frontmatter\n                                            .profile_image\n                                    }\n                                    alt={\n                                        post.frontmatter.author.frontmatter\n                                            .name\n                                    }\n                                />\n                            ) : (\n                                <img\n                                    className=\"default-avatar\"\n                                    src=\"/images/icons/avatar.svg\"\n                                    alt={\n                                        post.frontmatter.author.frontmatter\n                                            .name\n                                    }\n                                />\n                            )}\n                        </div>\n                        <span className=\"post-card-author-name\">\n                            {post.frontmatter.author.frontmatter.name}\n                        </span>\n                    </div>\n                    <div className=\"post-card-footer-right\">\n                        <div className=\"post-reading-time\">\n                            {readingTime}\n                        </div>\n                    </div>\n                </footer>\n            </div>\n        </Link>\n    )\n}\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        frontmatter: PropTypes.object.isRequired,\n    }).isRequired,\n}\n\nexport default PostCard","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nconst Pagination = ({ pageContext }) => {\n    const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext\n\n    return (\n        <nav className=\"pagination\" role=\"navigation\">\n            <div>\n                {previousPagePath && (\n\n                    <Link to={previousPagePath} rel=\"prev\">\n                            Previous\n                    </Link>\n\n                )}\n            </div>\n            {numberOfPages > 1 && <div className=\"pagination-location\">Page {humanPageNumber} of {numberOfPages}</div>}\n            <div>\n                {nextPagePath && (\n\n                    <Link to={nextPagePath} rel=\"next\">\n                            Next\n                    </Link>\n                )}\n            </div>\n        </nav>\n    )\n}\n\nPagination.propTypes = {\n    pageContext: PropTypes.object.isRequired,\n}\n\nexport default Pagination\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\n/**\n* Navigation component\n*\n* The Navigation component takes an array of your Ghost\n* navigation property that is fetched from the settings.\n* It differentiates between absolute (external) and relative link (internal).\n* You can pass it a custom class for your own styles, but it will always fallback\n* to a `site-nav-item` class.\n*\n*/\nconst Navigation = ({ data, navClass }) => (\n    <>\n        {data.map((navItem, i) => {\n            if (navItem.url.match(/^\\s?http(s?)/gi)) {\n                return <a className={navClass} href={navItem.url} key={i} target=\"_blank\" rel=\"noopener noreferrer\">{navItem.label}</a>\n            } else {\n                return <Link className={navClass} to={navItem.url} key={i}>{navItem.label}</Link>\n            }\n        })}\n    </>\n)\n\nNavigation.defaultProps = {\n    navClass: `site-nav-item`,\n}\n\nNavigation.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            label: PropTypes.string.isRequired,\n            url: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n    navClass: PropTypes.string,\n}\n\nexport default Navigation\n","export { default as Layout } from './Layout'\nexport { default as PostCard } from './PostCard'\nexport { default as Pagination } from './Pagination'\nexport { default as Navigation } from './Navigation'\n","import _ from 'lodash'\nimport PropTypes from 'prop-types'\n\nexport const getAuthorProperties = (primaryAuthor) => {\n    let authorProfiles = []\n\n    authorProfiles.push(\n        primaryAuthor.website ? primaryAuthor.website : null,\n        primaryAuthor.twitter ? `https://twitter.com/${primaryAuthor.twitter.replace(/^@/, ``)}/` : null,\n        primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null\n    )\n\n    authorProfiles = _.compact(authorProfiles)\n\n    return {\n        name: primaryAuthor.name || null,\n        sameAsArray: authorProfiles.length ? `[\"${_.join(authorProfiles, `\", \"`)}\"]` : null,\n        image: primaryAuthor.profile_image || null,\n        facebookUrl: primaryAuthor.facebook ? `https://www.facebook.com/${primaryAuthor.facebook.replace(/^\\//, ``)}/` : null,\n    }\n}\n\ngetAuthorProperties.defaultProps = {\n    fetchAuthorData: false,\n}\n\ngetAuthorProperties.PropTypes = {\n    primaryAuthor: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n}\n\nexport default getAuthorProperties\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport config from '../../../utils/siteConfig'\n\nconst ImageMeta = ({ image }) => {\n    if (!image) {\n        return null\n    }\n\n    return (\n        <Helmet>\n            <meta name=\"twitter:card\" content=\"summary_large_image\" />\n            <meta name=\"twitter:image\" content={image} />\n            <meta property=\"og:image\" content={image} />\n            <meta property=\"og:image:width\" content={config.shareImageWidth} />\n            <meta property=\"og:image:height\" content={config.shareImageHeight} />\n        </Helmet >\n    )\n}\n\nImageMeta.propTypes = {\n    image: PropTypes.string,\n}\n\nexport default ImageMeta\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport url from 'url'\n\nimport getAuthorProperties from './getAuthorProperties'\nimport ImageMeta from './ImageMeta'\nimport config from '../../../utils/siteConfig'\n\nimport { tags as tagsHelper } from '@tryghost/helpers'\n\nconst ArticleMetaGhost = ({ data, settings, canonical, id }) => {\n    const ghostPost = data\n    settings = config\n\n    const author = getAuthorProperties(ghostPost.frontmatter.author.frontmatter)\n    const publicTags = _.map(tagsHelper(ghostPost, { visibility: `public`, fn: tag => tag }), `name`)\n    const primaryTag = publicTags[0] || ``\n    const shareImage = ghostPost.frontmatter.feature_image\n        ? ghostPost.frontmatter.feature_image.childImageSharp.fluid.src\n        : _.get(config, `cover_image`, null);\n    const publisherLogo = config.siteIcon ? url.resolve(config.siteUrl, config.siteIcon) : null\n    const articleId = id;\n\n    return (\n        <>\n            <Helmet>\n                <title>{ghostPost.frontmatter.meta_title || ghostPost.frontmatter.title}</title>\n                <meta name=\"description\" content={ghostPost.frontmatter.meta_description || ghostPost.excerpt} />\n                <link rel=\"canonical\" href={canonical} />\n\n                <meta property=\"og:site_name\" content={config.title} />\n                <meta property=\"og:type\" content=\"article\" />\n                <meta property=\"og:title\"\n                    content={\n                        ghostPost.frontmatter.og_title ||\n                        ghostPost.frontmatter.meta_title ||\n                        ghostPost.frontmatter.title\n                    }\n                />\n                <meta property=\"og:description\"\n                    content={\n                        ghostPost.frontmatter.og_description ||\n                        ghostPost.frontmatter.meta_description ||\n                        ghostPost.frontmatter.excerpt\n                    }\n                />\n                <meta property=\"og:url\" content={canonical} />\n                <meta property=\"article:published_time\" content={ghostPost.frontmatter.published_at} />\n                <meta property=\"article:modified_time\" content={ghostPost.frontmatter.updated_at} />\n                {publicTags.map((keyword, i) => (<meta property=\"article:tag\" content={keyword} key={i} />))}\n                {author.facebookUrl && <meta property=\"article:author\" content={author.facebookUrl} />}\n\n                <meta name=\"twitter:title\"\n                    content={\n                        ghostPost.twitter_title ||\n                        ghostPost.meta_title ||\n                        ghostPost.title\n                    }\n                />\n                <meta name=\"twitter:description\"\n                    content={\n                        ghostPost.twitter_description ||\n                        ghostPost.excerpt ||\n                        ghostPost.meta_description\n                    }\n                />\n                <meta name=\"twitter:url\" content={canonical} />\n                <meta name=\"twitter:label1\" content=\"Written by\" />\n                <meta name=\"twitter:data1\" content={author.name} />\n                {primaryTag && <meta name=\"twitter:label2\" content=\"Filed under\" />}\n                {primaryTag && <meta name=\"twitter:data2\" content={primaryTag} />}\n\n                {settings.twitter && <meta name=\"twitter:site\" content={`https://twitter.com/${settings.twitter.replace(/^@/, ``)}/`} />}\n                {settings.twitter && <meta name=\"twitter:creator\" content={settings.twitter} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Article\",\n                        \"author\": {\n                            \"@type\": \"Person\",\n                            \"name\": \"${author.name}\",\n                            ${author.image ? author.sameAsArray ? `\"image\": \"${author.image}\",` : `\"image\": \"${author.image}\"` : ``}\n                            ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray}` : ``}\n                        },\n                        ${publicTags.length ? `\"keywords\": \"${_.join(publicTags, `, `)}\",` : ``}\n                        \"headline\": \"${ghostPost.frontmatter.meta_title || ghostPost.frontmatter.title}\",\n                        \"url\": \"${canonical}\",\n                        \"datePublished\": \"${ghostPost.frontmatter.published_at}\",\n                        \"dateModified\": \"${ghostPost.frontmatter.updated_at}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"publisher\": {\n                            \"@type\": \"Organization\",\n                            \"name\": \"${settings.title}\",\n                            \"logo\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${publisherLogo}\",\n                                \"width\": 60,\n                                \"height\": 60\n                            }\n                        },\n                        \"description\": \"${ghostPost.frontmatter.meta_description || ghostPost.frontmatter.excerpt}\",\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        }\n                    }\n                `}</script>\n                <script type=\"application/javascript\">\n                    {`console.log(\"Called\"); window.pageId=\"${articleId}\"`}\n                </script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nArticleMetaGhost.propTypes = {\n    data: PropTypes.shape({\n        html: PropTypes.string.isRequired,\n        frontmatter: PropTypes.object.isRequired,\n        excerpt: PropTypes.string.isRequired,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\n// const ArticleMetaQuery = props => (\n//     <StaticQuery\n//         query={graphql`\n//             query {\n//                 allGhostSettings {\n//                     edges {\n//                         node {\n//                             ...GhostSettingsFields\n//                         }\n//                     }\n//                 }\n//             }\n//         `}\n//         render={data => <ArticleMetaGhost settings={data} {...props} />}\n//     />\n// )\n\nexport default ArticleMetaGhost\n","import React from 'react'\nimport Helmet from \"react-helmet\"\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { StaticQuery, graphql } from 'gatsby'\nimport url from 'url'\n\nimport ImageMeta from './ImageMeta'\nimport config from '../../../utils/siteConfig'\n\nconst WebsiteMeta = ({ data, canonical, name, description, image, type }) => {\n    // (`WebsiteMeta ->`, data, name, description, image)\n\n    const publisherLogo = url.resolve(config.siteUrl, config.siteIcon)\n    let shareImage = image || _.get(config, `cover_image`, null)\n\n    shareImage = shareImage ? url.resolve(config.siteUrl, shareImage) : null\n\n    description = description || data.meta_description || data.description || config.siteDescriptionMeta || config.siteDescriptionMeta\n    const title = `${name} - ${config.siteTitleMeta}`\n\n    return (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta\n                    property=\"og:site_name\"\n                    content={config.siteTitleMeta}\n                />\n                <meta property=\"og:type\" content=\"website\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n\n                {config.siteTwitterHandle && (\n                    <meta\n                        name=\"twitter:site\"\n                        content={`https://twitter.com/${config.siteTwitterHandle.replace(\n                            /^@/,\n                            ``\n                        )}/`}\n                    />\n                )}\n                {config.siteTwitterHandle && (\n                    <meta\n                        name=\"twitter:creator\"\n                        content={config.siteTwitterHandle}\n                    />\n                )}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"${type}\",\n                        \"url\": \"${canonical}\",\n                        ${\n                            shareImage\n                                ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },`\n                                : ``\n                        }\n                        \"publisher\": {\n                            \"@type\": \"Organization\",\n                            \"name\": \"${config.siteTitleMeta}\",\n                            \"logo\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${publisherLogo}\",\n                                \"width\": 60,\n                                \"height\": 60\n                            }\n                        },\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n                <script>\n                    {`\n                       if (window.netlifyIdentity) {\n                        window.netlifyIdentity.on(\"init\", user => {\n                          if (!user) {\n                            window.netlifyIdentity.on(\"login\", () => {\n                              document.location.href = \"/admin/\";\n                            });\n                          }\n                        });\n                      }\n                    \n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nWebsiteMeta.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string,\n        feature_image: PropTypes.string,\n        description: PropTypes.string,\n        bio: PropTypes.string,\n        profile_image: PropTypes.string,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n    type: PropTypes.oneOf([`website`, `tag`]).isRequired,\n}\n\n// const WebsiteMetaQuery = props => (\n//     <StaticQuery\n//         query={graphql`\n//             query GhostSettingsWebsiteMeta {\n//                 allGhostSettings {\n//                     edges {\n//                         node {\n//                             ...GhostSettingsFields\n//                         }\n//                     }\n//                 }\n//             }\n//         `}\n//         render={data => <WebsiteMeta settings={data} {...props} />}\n//     />\n// )\n\nexport default WebsiteMeta\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport PropTypes from 'prop-types'\nimport _ from 'lodash'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport ImageMeta from './ImageMeta'\nimport getAuthorProperties from './getAuthorProperties'\nimport config from '../../../utils/siteConfig'\n\nconst AuthorMeta = ({ data, settings, canonical }) => {\n    // console.log(`AuthorMeta->`, data)\n    // settings = settings.allGhostSettings.edges[0].node\n\n    const author = getAuthorProperties(data)\n    const shareImage = author.image || _.get(config, `cover_image`, null)\n    const title = `${data.name} - ${config.siteTitleMeta}`\n    const description = data.description || config.siteDescriptionMeta\n\n    return (\n        <>\n            <Helmet>\n                <title>{title}</title>\n                <meta name=\"description\" content={description} />\n                <link rel=\"canonical\" href={canonical} />\n                <meta property=\"og:site_name\" content={config.siteTitleMeta} />\n                <meta property=\"og:type\" content=\"profile\" />\n                <meta property=\"og:title\" content={title} />\n                <meta property=\"og:description\" content={description} />\n                <meta property=\"og:url\" content={canonical} />\n                <meta name=\"twitter:title\" content={title} />\n                <meta name=\"twitter:description\" content={description} />\n                <meta name=\"twitter:url\" content={canonical} />\n                {config.siteTwitterHandle && <meta name=\"twitter:site\" content={`https://twitter.com/${config.siteTwitterHandle.replace(/^@/, ``)}/`} />}\n                {config.siteTwitterHandle && <meta name=\"twitter:creator\" content={config.siteTwitterHandle} />}\n                <script type=\"application/ld+json\">{`\n                    {\n                        \"@context\": \"https://schema.org/\",\n                        \"@type\": \"Person\",\n                        \"name\": \"${data.name}\",\n                        ${author.sameAsArray ? `\"sameAs\": ${author.sameAsArray},` : ``}\n                        \"url\": \"${canonical}\",\n                        ${shareImage ? `\"image\": {\n                                \"@type\": \"ImageObject\",\n                                \"url\": \"${shareImage}\",\n                                \"width\": \"${config.shareImageWidth}\",\n                                \"height\": \"${config.shareImageHeight}\"\n                            },` : ``}\n                        \"mainEntityOfPage\": {\n                            \"@type\": \"WebPage\",\n                            \"@id\": \"${config.siteUrl}\"\n                        },\n                        \"description\": \"${description}\"\n                    }\n                `}</script>\n            </Helmet>\n            <ImageMeta image={shareImage} />\n        </>\n    )\n}\n\nAuthorMeta.propTypes = {\n    data: PropTypes.shape({\n        name: PropTypes.string,\n        bio: PropTypes.string,\n        profile_image: PropTypes.string,\n        website: PropTypes.string,\n        twitter: PropTypes.string,\n        facebook: PropTypes.string,\n    }).isRequired,\n    settings: PropTypes.shape({\n        allGhostSettings: PropTypes.object.isRequired,\n    }).isRequired,\n    canonical: PropTypes.string.isRequired,\n}\n\n// const AuthorMetaQuery = props => (\n//     <StaticQuery\n//         query={graphql`\n//             query GhostSettingsAuthorMeta {\n//                 allGhostSettings {\n//                     edges {\n//                         node {\n//                             ...GhostSettingsFields\n//                         }\n//                     }\n//                 }\n//             }\n//         `}\n//         render={data => <AuthorMeta settings={data} {...props} />}\n//     />\n// )\n\nexport default AuthorMeta\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport url from 'url'\n\nimport config from '../../../utils/siteConfig'\nimport ArticleMeta from './ArticleMeta'\nimport WebsiteMeta from './WebsiteMeta'\nimport AuthorMeta from './AuthorMeta'\n\n/**\n* MetaData will generate all relevant meta data information incl.\n* JSON-LD (schema.org), Open Graph (Facebook) and Twitter properties.\n*\n*/\nconst MetaData = ({\n    data,\n    name,\n    description,\n    image,\n    location,\n    type,\n    id\n}) => {\n    // console.log(`metaData->`, data, type)\n    const canonical = url.resolve(config.siteUrl, location.pathname, `/`)\n    const { ghostPage } = data\n    // settings = settings.allGhostSettings.edges[0].node\n\n    if (type === `article`) {\n        return (\n            <ArticleMeta\n                data={data.markdownRemark}\n                canonical={canonical}\n                id={id}\n            />\n        )\n    } else if (type === `tag`) {\n        return (\n            <WebsiteMeta\n                data={data.allMarkdownRemark}\n                canonical={canonical}\n                name={name}\n                description={description}\n                image={image}\n                type=\"tag\"\n            />\n        )\n    } else if (type === `author`) {\n        return (\n            <AuthorMeta\n                data={data}\n                canonical={canonical}\n                description={description}\n                image={image}\n                type=\"author\"\n            />\n        )\n    } else if (type === `page`) {\n        return (\n            <WebsiteMeta\n                data={ghostPage}\n                canonical={canonical}\n                type=\"website\"\n            />\n        )\n    } else {\n        name = name || config.siteTitleMeta\n        description = description || config.siteDescriptionMeta\n        image = image || config.cover_image || null\n\n        image = image ? url.resolve(config.siteUrl, image) : null\n\n        return (\n            <WebsiteMeta\n                data={{}}\n                canonical={canonical}\n                name={name}\n                description={description}\n                image={image}\n                type=\"website\"\n            />\n        )\n    }\n}\n\nMetaData.defaultProps = {\n    data: {},\n}\n\nMetaData.propTypes = {\n    data: PropTypes.shape({\n        ghostPost: PropTypes.object,\n        ghostTag: PropTypes.object,\n        ghostAuthor: PropTypes.object,\n        ghostPage: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.string.isRequired,\n    }).isRequired,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string,\n}\n\n// const MetaDataQuery = props => (\n//     <StaticQuery\n//         query={graphql`\n//             query GhostSettingsMetaData {\n//                 allGhostSettings {\n//                     edges {\n//                         node {\n//                             title\n//                             description\n//                         }\n//                     }\n//                 }\n//             }\n//         `}\n//         render={data => <MetaData settings={data} {...props} />}\n//     />\n// )\n\nexport default MetaData\n","export { default as MetaData } from './MetaData'\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}